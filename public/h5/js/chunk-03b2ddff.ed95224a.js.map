{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./src/views/user/BindingPhone.vue?e4f6","webpack:///src/views/user/BindingPhone.vue","webpack:///./src/views/user/BindingPhone.vue?580c","webpack:///./src/views/user/BindingPhone.vue","webpack:///./src/utils/validate.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/mixins/SendVerifyCode.js"],"names":["__webpack_require__","d","__webpack_exports__","_asyncToGenerator","_core_js_promise__WEBPACK_IMPORTED_MODULE_0__","_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","n","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","a","then","fn","self","this","args","arguments","apply","err","undefined","render","_vm","_h","$createElement","_c","_self","staticClass","directives","name","rawName","expression","attrs","type","placeholder","domProps","on","input","$event","target","composing","phone","captcha","class","disabled","click","code","_v","_s","text","confirm","staticRenderFns","BindingPhonevue_type_script_lang_js_","components","props","data","mixins","SendVerifyCode","computed","Object","vuex_esm","mounted","methods","_confirm","asyncToGenerator","regeneratorRuntime","mark","_callee","that","wrap","_context","prev","next","$validator","validate","message","t0","abrupt","dialog","user","res","$dialog","success","msg","$router","replace","catch","stop","_code","_callee2","_context2","sendCode","user_BindingPhonevue_type_script_lang_js_","component","componentNormalizer","bindMessage","field","required","opt","length","_Users_sunliqiang_Documents_zb_h5_node_modules_babel_runtime_corejs2_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","url","email","alpha","pattern","alpha_dash","alpha_num","num","chs","chs_alpha","chs_alpha_num","chs_dash","chs_phone","baseAttr","min","max","range","keys","reduce","attr","_attr","_Users_sunliqiang_Documents_zb_h5_node_modules_babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","concat","module","exports","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","Promise","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","accidentalStrictMode","Function","_this","run","setInterval","clearInterval"],"mappings":"kHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAAM,EAAAF,GAEA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IACA,IAAAC,EAAAP,EAAAK,GAAAC,GACAE,EAAAD,EAAAC,MACG,MAAAC,GAEH,YADAP,EAAAO,GAIAF,EAAAG,KACAT,EAAAO,GAEIX,EAAAc,EAAQV,QAAAO,GAAAI,KAAAT,EAAAC,GAIG,SAAAT,EAAAkB,GACf,kBACA,IAAAC,EAAAC,KACAC,EAAAC,UACA,WAAepB,EAAAc,EAAQ,SAAAV,EAAAC,GACvB,IAAAF,EAAAa,EAAAK,MAAAJ,EAAAE,GAEA,SAAAb,EAAAK,GACAT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAI,GAGA,SAAAJ,EAAAe,GACApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAAAe,GAGAhB,OAAAiB,mDCjCA,IAAAC,EAAA,WAA0B,IAAAC,EAAAP,KAAaQ,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,kBAA6B,CAAAF,EAAA,OAAYE,YAAA,QAAmB,CAAAF,EAAA,OAAYE,YAAA,QAAmB,CAAAF,EAAA,SAAcG,WAAA,EAAaC,KAAA,QAAAC,QAAA,UAAAtB,MAAAc,EAAA,MAAAS,WAAA,UAAoEC,MAAA,CAASC,KAAA,SAAAC,YAAA,UAAuCC,SAAA,CAAW3B,MAAAc,EAAA,OAAoBc,GAAA,CAAKC,MAAA,SAAAC,GAAyBA,EAAAC,OAAAC,YAAsClB,EAAAmB,MAAAH,EAAAC,OAAA/B,aAAgCiB,EAAA,OAAcE,YAAA,qCAAgD,CAAAF,EAAA,SAAcG,WAAA,EAAaC,KAAA,QAAAC,QAAA,UAAAtB,MAAAc,EAAA,QAAAS,WAAA,YAAwEJ,YAAA,WAAAK,MAAA,CAAgCC,KAAA,OAAAC,YAAA,SAAoCC,SAAA,CAAW3B,MAAAc,EAAA,SAAsBc,GAAA,CAAKC,MAAA,SAAAC,GAAyBA,EAAAC,OAAAC,YAAsClB,EAAAoB,QAAAJ,EAAAC,OAAA/B,WAAkCiB,EAAA,UAAeE,YAAA,sBAAAgB,OAAA,IAAArB,EAAAsB,SAAA,QAAAZ,MAAA,CAAiFY,SAAAtB,EAAAsB,UAAwBR,GAAA,CAAKS,MAAAvB,EAAAwB,OAAkB,CAAAxB,EAAAyB,GAAA,aAAAzB,EAAA0B,GAAA1B,EAAA2B,MAAA,kBAAAxB,EAAA,OAAmEE,YAAA,0BAAAS,GAAA,CAA0CS,MAAAvB,EAAA4B,UAAqB,CAAA5B,EAAAyB,GAAA,aACplCI,EAAA,iGCgCAC,EAAA,CACAvB,KAAA,eACAwB,WAAA,GACAC,MAAA,GACAC,KAAA,WACA,OACAb,QAAA,GACAD,MAAA,KAGAe,OAAA,CAAAC,EAAA,MACAC,SAAAC,OAAAC,EAAA,KAAAD,CAAA,cACAE,QAAA,aACAC,QAAA,CACAZ,QADA,eAAAa,EAAAJ,OAAAK,EAAA,KAAAL,CAAAM,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA3B,EAAAC,EAAA,OAAAuB,mBAAAI,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEAJ,EAAArD,KACA0B,EAAA2B,EAAA3B,MAAAC,EAAA0B,EAAA1B,QAHA4B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKAJ,EACAK,WAAA,CACAhC,MAAA,CACAkB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,QAAA,SACAhB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,YAEAjC,QAAA,CACAiB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,QAAA,QACAhB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,QAAA,WAGAD,SAAA,CAAAjC,QAAAC,YAhBA,OAAA4B,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,YAAAA,EAAAO,OAAA,SAkBAlB,OAAAmB,EAAA,KAAAnB,CAAAW,EAAAM,KAlBA,QAoBAjB,OAAAoB,EAAA,KAAApB,CAAA,CACAlB,MAAA1B,KAAA0B,MACAC,QAAA3B,KAAA2B,UAEA9B,KAAA,SAAAoE,GACAZ,EAAAa,QAAAC,QAAAF,EAAAG,KAAAvE,KAAA,WACAwD,EAAAgB,QAAAC,QAAA,CAAAxD,KAAA,qBAGAyD,MAAA,SAAAN,GACAZ,EAAAa,QAAAxE,MAAAuE,EAAAG,OA9BA,yBAAAb,EAAAiB,SAAApB,EAAApD,KAAA,qBAAAmC,IAAA,OAAAa,EAAA7C,MAAAH,KAAAE,WAAA,OAAAiC,EAAA,GAiCAJ,KAjCA,eAAA0C,EAAA7B,OAAAK,EAAA,KAAAL,CAAAM,mBAAAC,KAAA,SAAAuB,IAAA,IAAArB,EAAA3B,EAAA,OAAAwB,mBAAAI,KAAA,SAAAqB,GAAA,eAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAkCAJ,EAAArD,KACA0B,EAAA2B,EAAA3B,MAnCAiD,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAqCAJ,EACAK,WAAA,CACAhC,MAAA,CACAkB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,QAAA,SACAhB,OAAAe,EAAA,KAAAf,CAAAe,EAAA,KAAAC,cAGAD,SAAA,CAAAjC,UA5CA,OAAAiD,EAAAlB,KAAA,uBAAAkB,EAAAnB,KAAA,EAAAmB,EAAAd,GAAAc,EAAA,YAAAA,EAAAb,OAAA,SA8CAlB,OAAAmB,EAAA,KAAAnB,CAAA+B,EAAAd,KA9CA,QAiDAjB,OAAAoB,EAAA,KAAApB,CAAA,CAAAlB,UACA7B,KAAA,SAAAoE,GACAZ,EAAAa,QAAAC,QAAAF,EAAAG,KACAf,EAAAuB,aAEAL,MAAA,SAAAN,GACAZ,EAAAa,QAAAxE,MAAAuE,EAAAG,OAvDA,yBAAAO,EAAAH,SAAAE,EAAA1E,KAAA,qBAAA+B,IAAA,OAAA0C,EAAAtE,MAAAH,KAAAE,WAAA,OAAA6B,EAAA,KC9CqW8C,EAAA,cCOrWC,EAAgBlC,OAAAmC,EAAA,KAAAnC,CACdiC,EACAvE,EACA8B,GACF,EACA,KACA,KACA,MAIezD,EAAA,WAAAmG,iOClBTE,aAAc,SAAClF,EAAI8D,GACvB9D,EAAG8D,QAAU,SAAAqB,GAAK,OAAIrB,EAAQU,QAAQ,KAAMW,GAAS,OAGhD,SAASC,EAAStB,GAAmB,IAAVuB,EAAUjF,UAAAkF,OAAA,QAAA/E,IAAAH,UAAA,GAAAA,UAAA,GAAJ,GACtC,OAAA0C,OAAAyC,EAAA,KAAAzC,CAAA,CACEsC,UAAU,EACVtB,UACA1C,KAAM,UACHiE,GAMA,SAASG,EAAI1B,GAAmB,IAAVuB,EAAUjF,UAAAkF,OAAA,QAAA/E,IAAAH,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAA0C,OAAAyC,EAAA,KAAAzC,CAAA,CACE1B,KAAM,MACN0C,WACGuB,GAMA,SAASI,EAAM3B,GAAmB,IAAVuB,EAAUjF,UAAAkF,OAAA,QAAA/E,IAAAH,UAAA,GAAAA,UAAA,GAAJ,GACnC,OAAA0C,OAAAyC,EAAA,KAAAzC,CAAA,CACE1B,KAAM,QACN0C,WACGuB,GAYA,SAASK,EAAM5B,GACpB,OAAO3C,EAAMwE,QAAQ,UAAW7B,GAW3B,SAAS8B,EAAW9B,GACzB,OAAO3C,EAAMwE,QAAQ,cAAe7B,GAW/B,SAAS+B,EAAU/B,GACxB,OAAO3C,EAAMwE,QAAQ,YAAa7B,GAU7B,SAASgC,EAAIhC,GAClB,OAAO3C,EAAMwE,QACX,wEACA7B,GAWG,SAASiC,EAAIjC,GAClB,OAAO3C,EAAMwE,QAAQ,qBAAsB7B,GAUtC,SAASkC,EAAUlC,GACxB,OAAO3C,EAAMwE,QAAQ,uBAAwB7B,GAUxC,SAASmC,EAAcnC,GAC5B,OAAO3C,EAAMwE,QAAQ,yBAA0B7B,GAU1C,SAASoC,EAASpC,GACvB,OAAO3C,EAAMwE,QAAQ,2BAA4B7B,GAU5C,SAASqC,EAAUrC,GACxB,OAAO3C,EAAMwE,QAAQ,2BAA4B7B,GA1HnDoB,EAAYE,EAAU,SAUtBF,EAAYM,EAAK,YAUjBN,EAAYO,EAAO,cAYnBP,EAAYQ,EAAO,WAYnBR,EAAYU,EAAY,yBAYxBV,EAAYW,EAAW,eAcvBX,EAAYY,EAAK,WAWjBZ,EAAYa,EAAK,WAWjBb,EAAYc,EAAW,eAWvBd,EAAYe,EAAe,kBAW3Bf,EAAYgB,EAAU,4BAUtBhB,EAAYiB,EAAW,cAEvB,IAAMC,EAAW,CACfC,IAAK,cACLC,IAAK,cACLhB,OAAQ,iBACRiB,MAAO,cACPZ,QAAS,UAGLxE,EAAQ2B,OAAO0D,KAAKJ,GAAUK,OAAO,SAACtF,EAAO3B,GAgBjD,OAfA2B,EAAM3B,GAAO,SAACkH,GAAiC,IAA3B5C,EAA2B1D,UAAAkF,OAAA,QAAA/E,IAAAH,UAAA,GAAAA,UAAA,GAAjB,GAAIiF,EAAajF,UAAAkF,OAAA,QAAA/E,IAAAH,UAAA,GAAAA,UAAA,GAAP,GAChCuG,EACI,UAARnH,EAAkB,CAAE6G,IAAKK,EAAK,GAAIJ,IAAKI,EAAK,IAA5C5D,OAAA8D,EAAA,KAAA9D,CAAA,GAAsDtD,EAAMkH,GAE9D,OAAA5D,OAAAyC,EAAA,KAAAzC,CAAA,CACEgB,QAASA,EAAQU,QAAR,IAAAqC,OACHrH,GACI,UAARA,EAAA,GAAAqH,OAAqBH,EAAK,GAA1B,KAAAG,OAAgCH,EAAK,IAAOA,GAE9CtF,KAAM,UACHuF,EACAtB,IAGPH,EAAY/D,EAAM3B,GAAM4G,EAAS5G,IAC1B2B,GACN,IAEYA,iCCtKf2F,EAAAC,QAAiBpI,EAAQ,gCCOzB,IAAAqI,EAAA,SAAAD,GACA,aAEA,IAEAxG,EAFA0G,EAAAnE,OAAAoE,UACAC,EAAAF,EAAAG,eAEAC,EAAA,oBAAAC,cAAA,GACAC,EAAAF,EAAAG,UAAA,aACAC,EAAAJ,EAAAK,eAAA,kBACAC,EAAAN,EAAAO,aAAA,gBAEA,SAAApE,EAAAqE,EAAAC,EAAA7H,EAAA8H,GAEA,IAAAC,EAAAF,KAAAZ,qBAAAe,EAAAH,EAAAG,EACAC,EAAApF,OAAAqF,OAAAH,EAAAd,WACAkB,EAAA,IAAAC,EAAAN,GAAA,IAMA,OAFAG,EAAAI,QAAAC,EAAAV,EAAA5H,EAAAmI,GAEAF,EAcA,SAAAM,EAAAxI,EAAAyI,EAAAhJ,GACA,IACA,OAAc2B,KAAA,SAAA3B,IAAAO,EAAA0I,KAAAD,EAAAhJ,IACT,MAAAa,GACL,OAAcc,KAAA,QAAA3B,IAAAa,IAhBdyG,EAAAvD,OAoBA,IAAAmF,EAAA,iBACAC,EAAA,iBACAC,EAAA,YACAC,EAAA,YAIAC,EAAA,GAMA,SAAAd,KACA,SAAAe,KACA,SAAAC,KAIA,IAAAC,EAAA,GACAA,EAAA3B,GAAA,WACA,OAAArH,MAGA,IAAAiJ,EAAArG,OAAAsG,eACAC,EAAAF,OAAAG,EAAA,MACAD,GACAA,IAAApC,GACAE,EAAAuB,KAAAW,EAAA9B,KAGA2B,EAAAG,GAGA,IAAAE,EAAAN,EAAA/B,UACAe,EAAAf,UAAApE,OAAAqF,OAAAe,GAQA,SAAAM,EAAAtC,GACA,0BAAAuC,QAAA,SAAAC,GACAxC,EAAAwC,GAAA,SAAAjK,GACA,OAAAS,KAAAoI,QAAAoB,EAAAjK,MAoCA,SAAAkK,EAAAzB,GACA,SAAA0B,EAAAF,EAAAjK,EAAAL,EAAAC,GACA,IAAAwK,EAAArB,EAAAN,EAAAwB,GAAAxB,EAAAzI,GACA,aAAAoK,EAAAzI,KAEO,CACP,IAAA0I,EAAAD,EAAApK,IACAE,EAAAmK,EAAAnK,MACA,OAAAA,GACA,kBAAAA,GACAwH,EAAAuB,KAAA/I,EAAA,WACAoK,QAAA3K,QAAAO,EAAAqK,SAAAjK,KAAA,SAAAJ,GACAiK,EAAA,OAAAjK,EAAAP,EAAAC,IACW,SAAAiB,GACXsJ,EAAA,QAAAtJ,EAAAlB,EAAAC,KAIA0K,QAAA3K,QAAAO,GAAAI,KAAA,SAAAkK,GAIAH,EAAAnK,MAAAsK,EACA7K,EAAA0K,IACS,SAAAlK,GAGT,OAAAgK,EAAA,QAAAhK,EAAAR,EAAAC,KAvBAA,EAAAwK,EAAApK,KA4BA,IAAAyK,EAEA,SAAAC,EAAAT,EAAAjK,GACA,SAAA2K,IACA,WAAAL,QAAA,SAAA3K,EAAAC,GACAuK,EAAAF,EAAAjK,EAAAL,EAAAC,KAIA,OAAA6K,EAaAA,IAAAnK,KACAqK,EAGAA,GACAA,IAKAlK,KAAAoI,QAAA6B,EAwBA,SAAA5B,EAAAV,EAAA5H,EAAAmI,GACA,IAAAiC,EAAA1B,EAEA,gBAAAe,EAAAjK,GACA,GAAA4K,IAAAxB,EACA,UAAAyB,MAAA,gCAGA,GAAAD,IAAAvB,EAAA,CACA,aAAAY,EACA,MAAAjK,EAKA,OAAA8K,IAGAnC,EAAAsB,SACAtB,EAAA3I,MAEA,SACA,IAAA+K,EAAApC,EAAAoC,SACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,EAAAF,EAAApC,GACA,GAAAqC,EAAA,CACA,GAAAA,IAAA1B,EAAA,SACA,OAAA0B,GAIA,YAAArC,EAAAsB,OAGAtB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAA3I,SAES,aAAA2I,EAAAsB,OAAA,CACT,GAAAW,IAAA1B,EAEA,MADA0B,EAAAvB,EACAV,EAAA3I,IAGA2I,EAAAyC,kBAAAzC,EAAA3I,SAES,WAAA2I,EAAAsB,QACTtB,EAAApE,OAAA,SAAAoE,EAAA3I,KAGA4K,EAAAxB,EAEA,IAAAgB,EAAArB,EAAAX,EAAA5H,EAAAmI,GACA,cAAAyB,EAAAzI,KAAA,CAOA,GAJAiJ,EAAAjC,EAAAvI,KACAiJ,EACAF,EAEAiB,EAAApK,MAAAsJ,EACA,SAGA,OACApJ,MAAAkK,EAAApK,IACAI,KAAAuI,EAAAvI,MAGS,UAAAgK,EAAAzI,OACTiJ,EAAAvB,EAGAV,EAAAsB,OAAA,QACAtB,EAAA3I,IAAAoK,EAAApK,OAUA,SAAAiL,EAAAF,EAAApC,GACA,IAAAsB,EAAAc,EAAAhD,SAAAY,EAAAsB,QACA,GAAAA,IAAAnJ,EAAA,CAKA,GAFA6H,EAAAoC,SAAA,KAEA,UAAApC,EAAAsB,OAAA,CAEA,GAAAc,EAAAhD,SAAA,YAGAY,EAAAsB,OAAA,SACAtB,EAAA3I,IAAAc,EACAmK,EAAAF,EAAApC,GAEA,UAAAA,EAAAsB,QAGA,OAAAX,EAIAX,EAAAsB,OAAA,QACAtB,EAAA3I,IAAA,IAAAqL,UACA,kDAGA,OAAA/B,EAGA,IAAAc,EAAArB,EAAAkB,EAAAc,EAAAhD,SAAAY,EAAA3I,KAEA,aAAAoK,EAAAzI,KAIA,OAHAgH,EAAAsB,OAAA,QACAtB,EAAA3I,IAAAoK,EAAApK,IACA2I,EAAAoC,SAAA,KACAzB,EAGA,IAAArJ,EAAAmK,EAAApK,IAEA,OAAAC,EAOAA,EAAAG,MAGAuI,EAAAoC,EAAAO,YAAArL,EAAAC,MAGAyI,EAAAzE,KAAA6G,EAAAQ,QAQA,WAAA5C,EAAAsB,SACAtB,EAAAsB,OAAA,OACAtB,EAAA3I,IAAAc,GAUA6H,EAAAoC,SAAA,KACAzB,GANArJ,GA3BA0I,EAAAsB,OAAA,QACAtB,EAAA3I,IAAA,IAAAqL,UAAA,oCACA1C,EAAAoC,SAAA,KACAzB,GAoDA,SAAAkC,EAAAC,GACA,IAAAC,EAAA,CAAiBC,OAAAF,EAAA,IAEjB,KAAAA,IACAC,EAAAE,SAAAH,EAAA,IAGA,KAAAA,IACAC,EAAAG,WAAAJ,EAAA,GACAC,EAAAI,SAAAL,EAAA,IAGAhL,KAAAsL,WAAAC,KAAAN,GAGA,SAAAO,EAAAP,GACA,IAAAtB,EAAAsB,EAAAQ,YAAA,GACA9B,EAAAzI,KAAA,gBACAyI,EAAApK,IACA0L,EAAAQ,WAAA9B,EAGA,SAAAxB,EAAAN,GAIA7H,KAAAsL,WAAA,EAAwBJ,OAAA,SACxBrD,EAAA0B,QAAAwB,EAAA/K,MACAA,KAAA0L,OAAA,GA8BA,SAAAtC,EAAAuC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAD,EAAAtE,GACA,GAAAuE,EACA,OAAAA,EAAApD,KAAAmD,GAGA,uBAAAA,EAAAlI,KACA,OAAAkI,EAGA,IAAAE,MAAAF,EAAAvG,QAAA,CACA,IAAA0G,GAAA,EAAArI,EAAA,SAAAA,IACA,QAAAqI,EAAAH,EAAAvG,OACA,GAAA6B,EAAAuB,KAAAmD,EAAAG,GAGA,OAFArI,EAAAhE,MAAAkM,EAAAG,GACArI,EAAA9D,MAAA,EACA8D,EAOA,OAHAA,EAAAhE,MAAAY,EACAoD,EAAA9D,MAAA,EAEA8D,GAGA,OAAAA,UAKA,OAAYA,KAAA4G,GAIZ,SAAAA,IACA,OAAY5K,MAAAY,EAAAV,MAAA,GA+MZ,OAxmBAmJ,EAAA9B,UAAAqC,EAAA0C,YAAAhD,EACAA,EAAAgD,YAAAjD,EACAC,EAAAtB,GACAqB,EAAAkD,YAAA,oBAYAnF,EAAAoF,oBAAA,SAAAC,GACA,IAAAC,EAAA,oBAAAD,KAAAH,YACA,QAAAI,IACAA,IAAArD,GAGA,uBAAAqD,EAAAH,aAAAG,EAAArL,QAIA+F,EAAA1D,KAAA,SAAA+I,GAUA,OATAtJ,OAAAwJ,eACAxJ,OAAAwJ,eAAAF,EAAAnD,IAEAmD,EAAAG,UAAAtD,EACAtB,KAAAyE,IACAA,EAAAzE,GAAA,sBAGAyE,EAAAlF,UAAApE,OAAAqF,OAAAoB,GACA6C,GAOArF,EAAAyF,MAAA,SAAA/M,GACA,OAAYuK,QAAAvK,IAsEZ+J,EAAAG,EAAAzC,WACAyC,EAAAzC,UAAAO,GAAA,WACA,OAAAvH,MAEA6G,EAAA4C,gBAKA5C,EAAA0F,MAAA,SAAA5E,EAAAC,EAAA7H,EAAA8H,GACA,IAAA2E,EAAA,IAAA/C,EACAnG,EAAAqE,EAAAC,EAAA7H,EAAA8H,IAGA,OAAAhB,EAAAoF,oBAAArE,GACA4E,EACAA,EAAA/I,OAAA5D,KAAA,SAAA+J,GACA,OAAAA,EAAAjK,KAAAiK,EAAAnK,MAAA+M,EAAA/I,UAuKA6F,EAAAD,GAEAA,EAAA5B,GAAA,YAOA4B,EAAAhC,GAAA,WACA,OAAArH,MAGAqJ,EAAAoD,SAAA,WACA,4BAkCA5F,EAAAP,KAAA,SAAAoG,GACA,IAAApG,EAAA,GACA,QAAAhH,KAAAoN,EACApG,EAAAiF,KAAAjM,GAMA,OAJAgH,EAAAqG,UAIA,SAAAlJ,IACA,MAAA6C,EAAAlB,OAAA,CACA,IAAA9F,EAAAgH,EAAAsG,MACA,GAAAtN,KAAAoN,EAGA,OAFAjJ,EAAAhE,MAAAH,EACAmE,EAAA9D,MAAA,EACA8D,EAQA,OADAA,EAAA9D,MAAA,EACA8D,IAsCAoD,EAAAuC,SAMAjB,EAAAnB,UAAA,CACA+E,YAAA5D,EAEAuD,MAAA,SAAAmB,GAcA,GAbA7M,KAAAwD,KAAA,EACAxD,KAAAyD,KAAA,EAGAzD,KAAAyK,KAAAzK,KAAA0K,MAAArK,EACAL,KAAAL,MAAA,EACAK,KAAAsK,SAAA,KAEAtK,KAAAwJ,OAAA,OACAxJ,KAAAT,IAAAc,EAEAL,KAAAsL,WAAA/B,QAAAiC,IAEAqB,EACA,QAAA/L,KAAAd,KAEA,MAAAc,EAAAgM,OAAA,IACA7F,EAAAuB,KAAAxI,KAAAc,KACA+K,OAAA/K,EAAAiM,MAAA,MACA/M,KAAAc,GAAAT,IAMAmE,KAAA,WACAxE,KAAAL,MAAA,EAEA,IAAAqN,EAAAhN,KAAAsL,WAAA,GACA2B,EAAAD,EAAAvB,WACA,aAAAwB,EAAA/L,KACA,MAAA+L,EAAA1N,IAGA,OAAAS,KAAAkN,MAGAvC,kBAAA,SAAAwC,GACA,GAAAnN,KAAAL,KACA,MAAAwN,EAGA,IAAAjF,EAAAlI,KACA,SAAAoN,EAAAC,EAAAC,GAYA,OAXA3D,EAAAzI,KAAA,QACAyI,EAAApK,IAAA4N,EACAjF,EAAAzE,KAAA4J,EAEAC,IAGApF,EAAAsB,OAAA,OACAtB,EAAA3I,IAAAc,KAGAiN,EAGA,QAAAxB,EAAA9L,KAAAsL,WAAAlG,OAAA,EAA8C0G,GAAA,IAAQA,EAAA,CACtD,IAAAb,EAAAjL,KAAAsL,WAAAQ,GACAnC,EAAAsB,EAAAQ,WAEA,YAAAR,EAAAC,OAIA,OAAAkC,EAAA,OAGA,GAAAnC,EAAAC,QAAAlL,KAAAwD,KAAA,CACA,IAAA+J,EAAAtG,EAAAuB,KAAAyC,EAAA,YACAuC,EAAAvG,EAAAuB,KAAAyC,EAAA,cAEA,GAAAsC,GAAAC,EAAA,CACA,GAAAxN,KAAAwD,KAAAyH,EAAAE,SACA,OAAAiC,EAAAnC,EAAAE,UAAA,GACa,GAAAnL,KAAAwD,KAAAyH,EAAAG,WACb,OAAAgC,EAAAnC,EAAAG,iBAGW,GAAAmC,GACX,GAAAvN,KAAAwD,KAAAyH,EAAAE,SACA,OAAAiC,EAAAnC,EAAAE,UAAA,OAGW,KAAAqC,EAMX,UAAApD,MAAA,0CALA,GAAApK,KAAAwD,KAAAyH,EAAAG,WACA,OAAAgC,EAAAnC,EAAAG,gBAUAtH,OAAA,SAAA5C,EAAA3B,GACA,QAAAuM,EAAA9L,KAAAsL,WAAAlG,OAAA,EAA8C0G,GAAA,IAAQA,EAAA,CACtD,IAAAb,EAAAjL,KAAAsL,WAAAQ,GACA,GAAAb,EAAAC,QAAAlL,KAAAwD,MACAyD,EAAAuB,KAAAyC,EAAA,eACAjL,KAAAwD,KAAAyH,EAAAG,WAAA,CACA,IAAAqC,EAAAxC,EACA,OAIAwC,IACA,UAAAvM,GACA,aAAAA,IACAuM,EAAAvC,QAAA3L,GACAA,GAAAkO,EAAArC,aAGAqC,EAAA,MAGA,IAAA9D,EAAA8D,IAAAhC,WAAA,GAIA,OAHA9B,EAAAzI,OACAyI,EAAApK,MAEAkO,GACAzN,KAAAwJ,OAAA,OACAxJ,KAAAyD,KAAAgK,EAAArC,WACAvC,GAGA7I,KAAA0N,SAAA/D,IAGA+D,SAAA,SAAA/D,EAAA0B,GACA,aAAA1B,EAAAzI,KACA,MAAAyI,EAAApK,IAcA,MAXA,UAAAoK,EAAAzI,MACA,aAAAyI,EAAAzI,KACAlB,KAAAyD,KAAAkG,EAAApK,IACO,WAAAoK,EAAAzI,MACPlB,KAAAkN,KAAAlN,KAAAT,IAAAoK,EAAApK,IACAS,KAAAwJ,OAAA,SACAxJ,KAAAyD,KAAA,OACO,WAAAkG,EAAAzI,MAAAmK,IACPrL,KAAAyD,KAAA4H,GAGAxC,GAGA8E,OAAA,SAAAvC,GACA,QAAAU,EAAA9L,KAAAsL,WAAAlG,OAAA,EAA8C0G,GAAA,IAAQA,EAAA,CACtD,IAAAb,EAAAjL,KAAAsL,WAAAQ,GACA,GAAAb,EAAAG,eAGA,OAFApL,KAAA0N,SAAAzC,EAAAQ,WAAAR,EAAAI,UACAG,EAAAP,GACApC,IAKAtE,MAAA,SAAA2G,GACA,QAAAY,EAAA9L,KAAAsL,WAAAlG,OAAA,EAA8C0G,GAAA,IAAQA,EAAA,CACtD,IAAAb,EAAAjL,KAAAsL,WAAAQ,GACA,GAAAb,EAAAC,WAAA,CACA,IAAAvB,EAAAsB,EAAAQ,WACA,aAAA9B,EAAAzI,KAAA,CACA,IAAA0M,EAAAjE,EAAApK,IACAiM,EAAAP,GAEA,OAAA2C,GAMA,UAAAxD,MAAA,0BAGAyD,cAAA,SAAAlC,EAAAd,EAAAC,GAaA,OAZA9K,KAAAsK,SAAA,CACAhD,SAAA8B,EAAAuC,GACAd,aACAC,WAGA,SAAA9K,KAAAwJ,SAGAxJ,KAAAT,IAAAc,GAGAwI,IAQAhC,EAvrBA,CA8rB4BD,EAAAC,SAG5B,IACA3D,mBAAA4D,EACC,MAAAgH,GAUDC,SAAA,6BAAAA,CAAAjH,uCCptBenI,EAAA,MACb6D,KADa,WAEX,MAAO,CACLX,UAAU,EACVK,KAAM,UAGVa,QAAS,CACP6B,SADO,WACI,IAAAoJ,EAAAhO,KACT,IAAIA,KAAK6B,SAAT,CACA7B,KAAK6B,UAAW,EAChB,IAAI9C,EAAI,GACRiB,KAAKkC,KAAO,MAAQnD,EAAI,IACxB,IAAMkP,EAAMC,YAAY,WACtBnP,GAAQ,EACJA,EAAI,GACNoP,cAAcF,GAEhBD,EAAK9L,KAAO,MAAQnD,EAAI,IACpBiP,EAAK9L,KAAO,UACd8L,EAAKnM,UAAW,EAChBmM,EAAK9L,KAAO,SAEb","file":"h5/js/chunk-03b2ddff.ed95224a.js","sourcesContent":["import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ChangePassword\"},[_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phone),expression:\"phone\"}],attrs:{\"type\":\"number\",\"placeholder\":\"填写手机号码\"},domProps:{\"value\":(_vm.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phone=$event.target.value}}})]),_c('div',{staticClass:\"item acea-row row-between-wrapper\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.captcha),expression:\"captcha\"}],staticClass:\"codeIput\",attrs:{\"type\":\"text\",\"placeholder\":\"填写验证码\"},domProps:{\"value\":(_vm.captcha)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.captcha=$event.target.value}}}),_c('button',{staticClass:\"code font-color-red\",class:_vm.disabled === true ? 'on' : '',attrs:{\"disabled\":_vm.disabled},on:{\"click\":_vm.code}},[_vm._v(\"\\n        \"+_vm._s(_vm.text)+\"\\n      \")])])]),_c('div',{staticClass:\"confirmBnt bg-color-red\",on:{\"click\":_vm.confirm}},[_vm._v(\"确认绑定\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"ChangePassword\">\n    <div class=\"list\">\n      <div class=\"item\">\n        <input type=\"number\" placeholder=\"填写手机号码\" v-model=\"phone\" />\n      </div>\n      <div class=\"item acea-row row-between-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"填写验证码\"\n          class=\"codeIput\"\n          v-model=\"captcha\"\n        />\n        <button\n          class=\"code font-color-red\"\n          :disabled=\"disabled\"\n          :class=\"disabled === true ? 'on' : ''\"\n          @click=\"code\"\n        >\n          {{ text }}\n        </button>\n      </div>\n    </div>\n    <div class=\"confirmBnt bg-color-red\" @click=\"confirm\">确认绑定</div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport sendVerifyCode from \"@mixins/SendVerifyCode\";\nimport { required, alpha_num, chs_phone } from \"@utils/validate\";\nimport { validatorDefaultCatch } from \"@utils/dialog\";\nimport { registerVerify, bindingPhone } from \"@api/user\";\n\nexport default {\n  name: \"BindingPhone\",\n  components: {},\n  props: {},\n  data: function() {\n    return {\n      captcha: \"\",\n      phone: \"\" //手机号\n    };\n  },\n  mixins: [sendVerifyCode],\n  computed: mapGetters([\"userInfo\"]),\n  mounted: function() {},\n  methods: {\n    async confirm() {\n      let that = this;\n      const { phone, captcha } = that;\n      try {\n        await that\n          .$validator({\n            phone: [\n              chs_phone(chs_phone.message(\"手机号码\")),\n              alpha_num(alpha_num.message())\n            ],\n            captcha: [\n              required(required.message(\"验证码\")),\n              alpha_num(alpha_num.message(\"验证码\"))\n            ]\n          })\n          .validate({ phone, captcha });\n      } catch (e) {\n        return validatorDefaultCatch(e);\n      }\n      bindingPhone({\n        phone: this.phone,\n        captcha: this.captcha\n      })\n        .then(res => {\n          that.$dialog.success(res.msg).then(() => {\n            that.$router.replace({ name: \"PersonalData\" });\n          });\n        })\n        .catch(res => {\n          that.$dialog.error(res.msg);\n        });\n    },\n    async code() {\n      let that = this;\n      const { phone } = that;\n      try {\n        await that\n          .$validator({\n            phone: [\n              required(required.message(\"手机号码\")),\n              chs_phone(chs_phone.message())\n            ]\n          })\n          .validate({ phone });\n      } catch (e) {\n        return validatorDefaultCatch(e);\n      }\n\n      registerVerify({ phone: phone })\n        .then(res => {\n          that.$dialog.success(res.msg);\n          that.sendCode();\n        })\n        .catch(res => {\n          that.$dialog.error(res.msg);\n        });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BindingPhone.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BindingPhone.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BindingPhone.vue?vue&type=template&id=1941b92c&\"\nimport script from \"./BindingPhone.vue?vue&type=script&lang=js&\"\nexport * from \"./BindingPhone.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const bindMessage = (fn, message) => {\n  fn.message = field => message.replace(\"%s\", field || \"\");\n};\n\nexport function required(message, opt = {}) {\n  return {\n    required: true,\n    message,\n    type: \"string\",\n    ...opt\n  };\n}\n\nbindMessage(required, \"请输入%s\");\n\nexport function url(message, opt = {}) {\n  return {\n    type: \"url\",\n    message,\n    ...opt\n  };\n}\n\nbindMessage(url, \"请输入正确的链接\");\n\nexport function email(message, opt = {}) {\n  return {\n    type: \"email\",\n    message,\n    ...opt\n  };\n}\n\nbindMessage(email, \"请输入正确的邮箱地址\");\n\n/**\n * 验证字段必须完全由字母构成。\n *\n * @param message\n * @returns {*}\n */\nexport function alpha(message) {\n  return attrs.pattern(/^[\\w]+$/, message);\n}\n\nbindMessage(alpha, \"%s必须是字母\");\n\n/**\n * 只能包含由字母、数字，以及 - 和 _\n *\n * @param message\n * @returns {*}\n */\nexport function alpha_dash(message) {\n  return attrs.pattern(/^[\\w\\d_-]+$/, message);\n}\n\nbindMessage(alpha_dash, \"%s只能包含由字母、数字，以及 - 和 _\");\n\n/**\n * 必须是完全是字母、数字\n *\n * @param message\n * @returns {*}\n */\nexport function alpha_num(message) {\n  return attrs.pattern(/^[\\w\\d]+$/, message);\n}\n\nbindMessage(alpha_num, \"%s只能包含字母、数字\");\n/**\n * 正确的金额\n *\n * @param message\n * @returns {*}\n */\nexport function num(message) {\n  return attrs.pattern(\n    /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/,\n    message\n  );\n}\n\nbindMessage(num, \"%s格式不正确\");\n\n/**\n * 只能是汉字\n * @param message\n * @returns {*}\n */\nexport function chs(message) {\n  return attrs.pattern(/^[\\u4e00-\\u9fa5]+$/, message);\n}\n\nbindMessage(chs, \"%s只能是汉字\");\n\n/**\n * 只能包含汉字、字母\n * @param message\n * @returns {*}\n */\nexport function chs_alpha(message) {\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w]+$/, message);\n}\n\nbindMessage(chs_alpha, \"%s只能包含汉字、字母\");\n\n/**\n * 只能包含汉字、字母和数字\n * @param message\n * @returns {*}\n */\nexport function chs_alpha_num(message) {\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w\\d]+$/, message);\n}\n\nbindMessage(chs_alpha_num, \"%s只能包含汉字、字母和数字\");\n\n/**\n * 只能包含由汉字、字母、数字，以及 - 和 _\n * @param message\n * @returns {*}\n */\nexport function chs_dash(message) {\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w\\d-_]+$/, message);\n}\n\nbindMessage(chs_dash, \"%s只能包含由汉字、字母、数字，以及 - 和 _\");\n\n/**\n * 手机号验证\n * @param message\n * @returns {*}\n */\nexport function chs_phone(message) {\n  return attrs.pattern(/^1(3|4|5|7|8|9|6)\\d{9}$/i, message);\n}\nbindMessage(chs_phone, \"请输入正确的手机号码\");\n\nconst baseAttr = {\n  min: \"%s最小长度为:min\",\n  max: \"%s最大长度为:max\",\n  length: \"%s长度必须为:length\",\n  range: \"%s长度为:range\",\n  pattern: \"$s格式错误\"\n};\n\nconst attrs = Object.keys(baseAttr).reduce((attrs, key) => {\n  attrs[key] = (attr, message = \"\", opt = {}) => {\n    const _attr =\n      key === \"range\" ? { min: attr[0], max: attr[1] } : { [key]: attr };\n\n    return {\n      message: message.replace(\n        `:${key}`,\n        key === \"range\" ? `${attr[0]}-${attr[1]}` : attr\n      ),\n      type: \"string\",\n      ..._attr,\n      ...opt\n    };\n  };\n  bindMessage(attrs[key], baseAttr[key]);\n  return attrs;\n}, {});\n\nexport default attrs;\n","module.exports = require(\"core-js/library/fn/promise\");","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default {\n  data() {\n    return {\n      disabled: false,\n      text: \"获取验证码\"\n    };\n  },\n  methods: {\n    sendCode() {\n      if (this.disabled) return;\n      this.disabled = true;\n      let n = 60;\n      this.text = \"剩余 \" + n + \"s\";\n      const run = setInterval(() => {\n        n = n - 1;\n        if (n < 0) {\n          clearInterval(run);\n        }\n        this.text = \"剩余 \" + n + \"s\";\n        if (this.text < \"剩余 \" + 0 + \"s\") {\n          this.disabled = false;\n          this.text = \"重新获取\";\n        }\n      }, 1000);\n    }\n  }\n};\n"],"sourceRoot":""}